/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Hero = {
  _type: 'hero'
  eyebrow?: string
  title?: string
  content?: string
  ctas?: Array<
    {
      _key: string
    } & CallToAction
  >
  bgImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    loading?: 'lazy' | 'eager'
    _type: 'image'
  }
  darkMode?: boolean
  layout?: 'stacked' | 'floated'
  overlayOpacity?: '0' | '20' | '40' | '60' | '80' | '100'
  textAlign?: 'left' | 'center'
  alignItems?: 'start' | 'center' | 'end' | 'justify'
  enabled?: boolean
}

export type HeroSplit = {
  _type: 'heroSplit'
  eyebrow?: string
  title?: string
  content?: string
  ctas?: Array<
    {
      _key: string
    } & CallToAction
  >
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    onRight?: boolean
    loading?: 'lazy' | 'eager'
    _type: 'image'
  }
  theme?: 'light' | 'dark' | 'muted'
  alignItems?: 'start' | 'center' | 'end' | 'justify'
  enabled?: boolean
}

export type LinkList = {
  _type: 'link.list'
  link?: Link
  links?: Array<
    {
      _key: string
    } & Link
  >
}

export type Link = {
  _type: 'link'
  label?: string
  linkType?: 'href' | 'page' | 'post'
  href?: string
  page?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'page'
  }
  post?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'post'
  }
  openInNewTab?: boolean
}

export type InfoSection = {
  _type: 'infoSection'
  heading?: string
  subheading?: string
  content?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      linkType?: 'href' | 'page' | 'post'
      href?: string
      page?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'page'
      }
      post?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'post'
      }
      openInNewTab?: boolean
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
}

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>
    text?: string
    _type: 'span'
    _key: string
  }>
  style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
  listItem?: 'bullet' | 'number'
  markDefs?: Array<{
    linkType?: 'href' | 'page' | 'post'
    href?: string
    page?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'page'
    }
    post?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'post'
    }
    openInNewTab?: boolean
    _type: 'link'
    _key: string
  }>
  level?: number
  _type: 'block'
  _key: string
}>

export type Redirect = {
  _id: string
  _type: 'redirect'
  _createdAt: string
  _updatedAt: string
  _rev: string
  source?: string
  destination?: string
  permanent?: boolean
}

export type Form = {
  _id: string
  _type: 'form'
  _createdAt: string
  _updatedAt: string
  _rev: string
  formName?: string
  fields?: Array<
    | {
        label?: string
        required?: boolean
        _type: 'textField'
        _key: string
      }
    | {
        label?: string
        required?: boolean
        _type: 'numberField'
        _key: string
      }
    | {
        label?: string
        options?: Array<string>
        required?: boolean
        _type: 'selectField'
        _key: string
      }
    | {
        label?: string
        required?: boolean
        _type: 'emailField'
        _key: string
      }
    | {
        label?: string
        required?: boolean
        _type: 'telField'
        _key: string
      }
    | {
        label?: string
        required?: boolean
        _type: 'textareaField'
        _key: string
      }
    | {
        label?: string
        options?: Array<string>
        required?: boolean
        _type: 'checkboxField'
        _key: string
      }
    | {
        label?: string
        options?: Array<string>
        required?: boolean
        _type: 'radioField'
        _key: string
      }
  >
  recipient?: string
  cc?: string
  confirmationPage?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'page'
  }
}

export type Page = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  slug?: Slug
  heading?: string
  subheading?: string
  pageBuilder?: Array<
    | ({
        _key: string
      } & CallToAction)
    | ({
        _key: string
      } & InfoSection)
    | ({
        _key: string
      } & HeroSplit)
    | ({
        _key: string
      } & Hero)
  >
}

export type Post = {
  _id: string
  _type: 'post'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  content?: BlockContent
  excerpt?: string
  coverImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  date?: string
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'person'
  }
}

export type Person = {
  _id: string
  _type: 'person'
  _createdAt: string
  _updatedAt: string
  _rev: string
  firstName?: string
  lastName?: string
  picture?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}

export type Settings = {
  _id: string
  _type: 'settings'
  _createdAt: string
  _updatedAt: string
  _rev: string
  companyName?: string
  email?: string
  phone?: string
  callToAction?: CallToAction
  headerMenu?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'navigation'
  }
  footerMenu?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'navigation'
  }
  social?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'navigation'
  }
  ogImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    metadataBase?: string
    _type: 'image'
  }
}

export type Navigation = {
  _id: string
  _type: 'navigation'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  items?: Array<
    | ({
        _key: string
      } & Link)
    | ({
        _key: string
      } & LinkList)
  >
}

export type CallToAction = {
  _type: 'callToAction'
  link?: Link
}

export type SanityAssistInstructionTask = {
  _type: 'sanity.assist.instructionTask'
  path?: string
  instructionKey?: string
  started?: string
  updated?: string
  info?: string
}

export type SanityAssistTaskStatus = {
  _type: 'sanity.assist.task.status'
  tasks?: Array<
    {
      _key: string
    } & SanityAssistInstructionTask
  >
}

export type SanityAssistSchemaTypeAnnotations = {
  _type: 'sanity.assist.schemaType.annotations'
  title?: string
  fields?: Array<
    {
      _key: string
    } & SanityAssistSchemaTypeField
  >
}

export type SanityAssistOutputType = {
  _type: 'sanity.assist.output.type'
  type?: string
}

export type SanityAssistOutputField = {
  _type: 'sanity.assist.output.field'
  path?: string
}

export type SanityAssistInstructionContext = {
  _type: 'sanity.assist.instruction.context'
  reference?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'assist.instruction.context'
  }
}

export type AssistInstructionContext = {
  _id: string
  _type: 'assist.instruction.context'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  context?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal'
    listItem?: never
    markDefs?: null
    level?: number
    _type: 'block'
    _key: string
  }>
}

export type SanityAssistInstructionUserInput = {
  _type: 'sanity.assist.instruction.userInput'
  message?: string
  description?: string
}

export type SanityAssistInstructionPrompt = Array<{
  children?: Array<
    | {
        marks?: Array<string>
        text?: string
        _type: 'span'
        _key: string
      }
    | ({
        _key: string
      } & SanityAssistInstructionFieldRef)
    | ({
        _key: string
      } & SanityAssistInstructionContext)
    | ({
        _key: string
      } & SanityAssistInstructionUserInput)
  >
  style?: 'normal'
  listItem?: never
  markDefs?: null
  level?: number
  _type: 'block'
  _key: string
}>

export type SanityAssistInstructionFieldRef = {
  _type: 'sanity.assist.instruction.fieldRef'
  path?: string
}

export type SanityAssistInstruction = {
  _type: 'sanity.assist.instruction'
  prompt?: SanityAssistInstructionPrompt
  icon?: string
  title?: string
  userId?: string
  createdById?: string
  output?: Array<
    | ({
        _key: string
      } & SanityAssistOutputField)
    | ({
        _key: string
      } & SanityAssistOutputType)
  >
}

export type SanityAssistSchemaTypeField = {
  _type: 'sanity.assist.schemaType.field'
  path?: string
  instructions?: Array<
    {
      _key: string
    } & SanityAssistInstruction
  >
}

export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type AllSanitySchemaTypes =
  | Hero
  | HeroSplit
  | LinkList
  | Link
  | InfoSection
  | BlockContent
  | Redirect
  | Form
  | Page
  | Post
  | Person
  | Settings
  | Navigation
  | CallToAction
  | SanityAssistInstructionTask
  | SanityAssistTaskStatus
  | SanityAssistSchemaTypeAnnotations
  | SanityAssistOutputType
  | SanityAssistOutputField
  | SanityAssistInstructionContext
  | AssistInstructionContext
  | SanityAssistInstructionUserInput
  | SanityAssistInstructionPrompt
  | SanityAssistInstructionFieldRef
  | SanityAssistInstruction
  | SanityAssistSchemaTypeField
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData
export declare const internalGroqTypeReferenceTo: unique symbol
